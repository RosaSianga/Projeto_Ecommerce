
CREATE SCHEMA ECOMMERCE IF NOT EXISTS;

SET SEARCH_PATH TO ECOMMERCE;

CREATE TABLE ECOMMERCE.CLIENTE (
		CLIENTE_ID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
		NOME_COMPLETO TEXT NOT NULL,
		EMAIL TEXT NOT NULL,
		SENHA TEXT NOT NULL,
		TELEFONE TEXT NULL,
		DATA_CADASTRO TIMESTAMPTZ NOT NULL
);


CREATE TABLE ECOMMERCE.ENDERECO_DE_ENTREGA(
		ENDERECO_ID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
		CLIENTE_ID INT NOT NULL,
		LOGRADOURO TEXT NOT NULL,
		NUMERO VARCHAR(10) NOT NULL,
		COMPLEMENTO TEXT NULL,
		BAIRRO TEXT NOT NULL,
		CIDADE TEXT NOT NULL,
		ESTADO CHAR(2) NOT NULL,
		CEP TEXT NOT NULL,
		FOREIGN KEY (CLIENTE_ID) REFERENCES ECOMMERCE.CLIENTE (CLIENTE_ID)
);

CREATE TABLE ECOMMERCE.PEDIDO (
		PEDIDO_ID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
		CLIENTE_ID INT NOT NULL,
		ENDERECO_ID INT NOT NULL,
		DATA_PEDIDO TIMESTAMPTZ NOT NULL,
		VALOR_TOTAL NUMERIC(13,2) NOT NULL,
		STATUS TEXT NOT NULL,
		FOREIGN KEY (CLIENTE_ID) REFERENCES ECOMMERCE.CLIENTE (CLIENTE_ID),
		FOREIGN KEY (ENDERECO_ID) REFERENCES ECOMMERCE.ENDERECO_DE_ENTREGA (ENDERECO_ID)
);

ALTER TABLE ECOMMERCE.PEDIDO
		ADD CONSTRAINT VALOR_TOTAL CHECK (valor_total >= 0),
		ADD CONSTRAINT STATUS CHECK (status IN ('Pendente', 'Processando', 'Enviado', 'Entregue', 'Cancelado'));

CREATE TABLE ECOMMERCE.PAGAMENTO (
		PAGAMENTO_ID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
		PEDIDO_ID INT NOT NULL,
		FORMA_PAGAMENTO TEXT NOT NULL,
		STATUS TEXT NOT NULL,
		DATA_PAGAMENTO TIMESTAMPTZ NOT NULL,
		FOREIGN KEY (PEDIDO_ID) REFERENCES ECOMMERCE.PEDIDO(PEDIDO_ID)
);

ALTER TABLE ECOMMERCE.PAGAMENTO
        ADD CONSTRAINT FORMA_PAGAMENTO CHECK (FORMA_PAGAMENTO IN ('CARTÃO DE CRÉDITO', 'BOLETO', 'PIX', 'TRANSFERÊNCIA')),
		ADD CONSTRAINT STATUS CHECK (STATUS IN ('APROVADO', 'RECUSADO', 'PENDENTE', 'ESTORNADO'));

		
CREATE TABLE ECOMMERCE.CATEGORIA(
		CATEGORIA_ID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
		NOME_CATEGORIA TEXT NOT NULL,
		DESCRICAO TEXT NULL
);

CREATE TABLE ECOMMERCE.PRODUTO(
		PRODUTO_ID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
		CATEGORIA_ID INT NOT NULL REFERENCES ECOMMERCE.CATEGORIA(CATEGORIA_ID),
		NOME_PRODUTO TEXT NOT NULL,
		DESCRICAO TEXT NULL,
		PRECO NUMERIC(13,2) NOT NULL,
		ESTOQUE_DISPONIVEL INT NOT NULL,
		IMAGEM_URL TEXT NULL
);

--INCLUIR UMA CONSTRAINT NA TABELA
ALTER TABLE ECOMMERCE.PRODUTO
        ADD CONSTRAINT PRECO_POSITIVO CHECK (PRECO > 0),
		ADD CONSTRAINT ESTOQUE_DISPONIVEL CHECK (ESTOQUE_DISPONIVEL >= 0);

--ALTERAR O NOME DA CONSTRAINT
ALTER TABLE ECOMMERCE.PRODUTO 
	 RENAME CONSTRAINT PRECO_POSITIVO TO PRECO;		

--ALTERAR A TABELA PARA INCLUIR CAMPO NOVO
ALTER TABLE ECOMMERCE.PRODUTO
		ADD COLUMN ESTOQUE_VENDIDO INT NULL;

--ALTERAR A TABELA PARA INCLUIR UM CAMPO UNICO
ALTER TABLE ECOMMERCE.PRODUTO
		ADD CONSTRAINT NOME_PRODUTO UNIQUE (NOME_PRODUTO);

--ALTERAR A TABELA PARA DELETAR UM CAMPO
ALTER TABLE ECOMMERCE.PRODUTO
	   DROP COLUMN ESTOQUE_VENDIDO;		

--ALTERAR O NOME DA TABELA
ALTER TABLE ECOMMERCE.PRODUTO 
	 RENAME TO PRODUTOS;	
		
CREATE TABLE ECOMMERCE.ITEM_DO_PEDIDO(
		ITEM_ID INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
		PEDIDO_ID INT NOT NULL REFERENCES ECOMMERCE.PEDIDO(PEDIDO_ID),
		PRODUTO_ID INT NOT NULL REFERENCES ECOMMERCE.PRODUTO(PRODUTO_ID),
		QUANTIDADE INT NOT NULL
);

ALTER TABLE ECOMMERCE.ITEM_DO_PEDIDO
		ADD CONSTRAINT QUANTIDADE CHECK (QUANTIDADE > 0);

/*
DROP TABLE ECOMMERCE.PAGAMENTO;
DROP TABLE ECOMMERCE.ENDERECO_DE_ENTREGA;
DROP TABLE ECOMMERCE.PRODUTO;
DROP TABLE ECOMMERCE.ITEM_DO_PEDIDO;
DROP TABLE ECOMMERCE.PEDIDO;
DROP TABLE ECOMMERCE.CATEGORIA;
DROP TABLE ECOMMERCE.CLIENTE;
*/

--TRUNCATE TABLE ECOMMERCE.ITEM_PEDIDO --- lIMPA OS DADOS DA TABELA - IGUAL O DELETE
--TRUNCATE TABLE ECOMMERCE.ITEM_PEDIDO RESTART IDENTITY--- lIMPA OS DADOS DA TABELA E VOLTA O IDENTITY DO INICIO.